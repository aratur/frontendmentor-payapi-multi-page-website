@use '../base/typography' as t;
@use '../base/constants' as c;
@use '../utils/mixins' as *;
@use '../utils/utility-classes' as u;

// .item-card,
// .item-card * {
//   background-color: rgba(0, 0, 0, 0.1);
//   outline: 1px solid black;
// }

.item-card {
  position: relative;
  display: grid;
  row-gap: c.$gap-size-default;
  padding-inline: clamp(1.5rem, 3.5vw, 2.5rem);
  padding-block: 2rem;
  background-color: var(--clr-card-background);
  box-shadow: var(--card-box-shadow);
}

@include media-desktop {
  .item-card {
    grid-auto-flow: column;
    grid-template-columns: max-content 1fr;
    justify-content: space-between;
    row-gap: 0;
    column-gap: c.$gap-size-default;
  }
}

.item-card.is-featured::after {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  background-color: var(--clr-primary);
  height: 100%;
  width: 5px;
  border-top-left-radius: u.$border-radius-medium;
  border-bottom-left-radius: u.$border-radius-medium;
}

.item-left-side-container {
  display: flex;
  align-items: flex-start;
  column-gap: 1.5rem;
}

.item-logo {
  position: absolute;
  top: -1.5rem;
  left: 1.5rem;
  width: 3rem;
  aspect-ratio: 1 / 1;
}

@include media-desktop {
  .item-logo {
    position: unset;
    width: 5.5rem;
  }
}

.item-description-container {
  display: flex;
  flex-direction: column;
}

.item-header {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  column-gap: c.$gap-size-default;
  min-height: 1.5rem;
}

h3.item-company {
  font-size: var(--fnt-size-large-mobile);
  line-height: normal;
  font-weight: bold;
  color: var(--clr-primary);
}

@include media-desktop {
  h3.item-company {
    font-size: var(--fnt-size-large);
  }
}

.item-header-tiles {
  display: flex;
  column-gap: 0.5rem;
}

.item-header-tiles > * {
  color: var(--clr-card-background);
  text-transform: uppercase;
  font-weight: bold;
  font-size: var(--fnt-size-small);
  letter-spacing: 0.11px;
  height: 1.5rem;
  line-height: 1;
  padding: 0.5em;
}

.item-header-tiles .item-new {
  background-color: var(--clr-primary);
}

.item-header-tiles .item-featured {
  background-color: var(--clr-very-dark-greyish-cyan);
}

h2.item-position {
  font-weight: bold;
  font-size: var(--fnt-size-x-large-mobile);
  line-height: 1.5rem;
  margin-top: 9px;
  @include hover-animate;
}

@include media-desktop {
  h2.item-position {
    font-size: var(--fnt-size-x-large);
    margin-top: 10px;
  }
}

h2.item-position:hover {
  color: var(--clr-primary);
}

$moving-options-gap: clamp(0.5rem, 1.5vw, 1rem);

.item-options-container {
  display: flex;
  align-items: center;
  justify-items: flex-start;
  column-gap: $moving-options-gap;
  margin-top: 8px;
  font-size: var(--fnt-size-small);
  line-height: 1.5rem;
  color: var(--clr-dark-grayish-cyan);
}

@include media-desktop {
  .item-options-container {
    font-size: var(--fnt-size-large);
    margin-top: 7px;
  }
}

// on smaller screens unnecessarily takes up space
@media (min-width: 350px) {
  .item-options-container > :not(:last-child) {
    position: relative;
    padding-right: calc($moving-options-gap + 0.25rem);
  }
  .item-options-container > :not(:last-child)::after {
    content: '';
    position: absolute;
    inset: calc((1.5rem - 0.25rem) / 2) 0 auto auto;
    border-radius: 1rem;
    width: 0.25rem;
    height: 0.25rem;
    background-color: var(--clr-light-grayish-cyan);
  }
}

.item-horizontal-line {
  width: 100%;
  height: 1px;
  background-color: var(--clr-light-grayish-cyan);
}

@include media-desktop {
  .item-horizontal-line {
    display: none;
  }
}

.item-properties {
  display: flex;
  flex-wrap: wrap;
  column-gap: c.$gap-size-default;
  row-gap: c.$gap-size-default;
}

@include media-desktop {
  .item-properties {
    justify-content: flex-end;
    align-items: center;
  }
}

.item-properties * {
  background-color: rgba(0, 0, 0, 0.1);
  outline: 1 solid black;
}

.item-properties > button {
  @include t.fnt-primary;
  padding: 2px 0.6rem 0 0.6rem;
  height: 2rem;
  line-height: 2;
  border: none;
  cursor: pointer;
  background-color: var(--clr-property-background);
  @include hover-animate;
}

.item-properties button:is(:hover, :active) {
  background-color: var(--clr-primary);
  color: var(--clr-card-background);
}

.item-properties > button:active {
  @include click-animation;
}
